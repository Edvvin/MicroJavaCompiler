INFO  00:23:42,389 - Compiling source file: /home/edvin/Desktop/ppp/MicroJavaCompiler/test/program.mj
INFO  00:23:42,409 - #2 program
INFO  00:23:42,410 - #50 MJProgram
INFO  00:23:42,410 - #50 int
INFO  00:23:42,410 - #50 x
INFO  00:23:42,410 - #7 ;
INFO  00:23:42,410 - #50 int
INFO  00:23:42,411 - #50 y
INFO  00:23:42,411 - #7 ;
INFO  00:23:42,411 - #3 {
INFO  00:23:42,411 - #50 int
INFO  00:23:42,411 - #50 k
INFO  00:23:42,411 - #8 (
INFO  00:23:42,411 - #9 )
INFO  00:23:42,412 - #50 int
INFO  00:23:42,412 - #50 c
INFO  00:23:42,412 - #7 ;
INFO  00:23:42,412 - #3 {
INFO  00:23:42,412 - #50 c
INFO  00:23:42,413 - #27 =
INFO  00:23:42,413 - #49 1
INFO  00:23:42,413 - #7 ;
INFO  00:23:42,413 - #13 return
INFO  00:23:42,413 - #50 c
INFO  00:23:42,413 - #18 +
INFO  00:23:42,414 - #49 2
INFO  00:23:42,414 - #7 ;
INFO  00:23:42,414 - #4 }
INFO  00:23:42,414 - #14 void
INFO  00:23:42,414 - #50 main
INFO  00:23:42,414 - #8 (
INFO  00:23:42,415 - #9 )
INFO  00:23:42,415 - #10 const
ERROR 00:23:42,415 - 
Sintaksna greska na liniji 10
INFO  00:23:42,415 - #50 char
INFO  00:23:42,415 - #50 g
INFO  00:23:42,415 - #5 [
INFO  00:23:42,415 - #6 ]
INFO  00:23:42,415 - #7 ;
INFO  00:23:42,415 - #3 {
INFO  00:23:42,416 - #50 x
INFO  00:23:42,416 - #27 =
INFO  00:23:42,416 - #50 k
INFO  00:23:42,416 - #8 (
INFO  00:23:42,416 - #9 )
INFO  00:23:42,416 - #20 *
INFO  00:23:42,416 - #49 2
INFO  00:23:42,416 - #7 ;
INFO  00:23:42,416 - #12 print
INFO  00:23:42,416 - #8 (
INFO  00:23:42,416 - #50 x
INFO  00:23:42,416 - #9 )
INFO  00:23:42,416 - #7 ;
INFO  00:23:42,416 - #34 read
INFO  00:23:42,416 - #8 (
INFO  00:23:42,417 - #50 y
INFO  00:23:42,417 - #9 )
INFO  00:23:42,417 - #7 ;
INFO  00:23:42,417 - #39 if
INFO  00:23:42,417 - #8 (
INFO  00:23:42,417 - #50 x
INFO  00:23:42,417 - #32 ==
INFO  00:23:42,417 - #50 y
INFO  00:23:42,417 - #9 )
INFO  00:23:42,417 - #3 {
INFO  00:23:42,417 - #12 print
INFO  00:23:42,417 - #8 (
ERROR 00:23:42,417 - Syntax error in line 10 formal params bad. recovery up to ')'
INFO  00:23:42,418 - #49 50
INFO  00:23:42,418 - #9 )
INFO  00:23:42,418 - #7 ;
INFO  00:23:42,418 - #50 g
INFO  00:23:42,419 - #27 =
INFO  00:23:42,419 - #15 new
INFO  00:23:42,419 - #50 char
INFO  00:23:42,419 - #5 [
INFO  00:23:42,419 - #49 5
INFO  00:23:42,419 - #6 ]
INFO  00:23:42,419 - #7 ;
INFO  00:23:42,419 - #4 }
INFO  00:23:42,419 - #36 do
ERROR 00:23:42,419 - 
Sintaksna greska na liniji 18
ERROR 00:23:42,419 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 18
INFO  00:23:42,419 - AstStatementL(
  AstStatementL(
    AstNoStmt(
    ) [AstNoStmt]
    AstPrintStmt(
      AstNotTerExpr(
        AstPosExpr(
          AstTermExpr(
            AstTermOne(
              AstFactNum(
               50
              ) [AstFactNum]
            ) [AstTermOne]
          ) [AstTermExpr]
        ) [AstPosExpr]
      ) [AstNotTerExpr]
    ) [AstPrintStmt]
  ) [AstStatementL]
  AstDesigStmt(
    AstEqualStmt(
      AstDesig(
       g
      ) [AstDesig]
      AstNotTerExpr(
        AstPosExpr(
          AstTermExpr(
            AstTermOne(
              AstNewArray(
                AstType(
                 char
                ) [AstType]
                AstNotTerExpr(
                  AstPosExpr(
                    AstTermExpr(
                      AstTermOne(
                        AstFactNum(
                         5
                        ) [AstFactNum]
                      ) [AstTermOne]
                    ) [AstTermExpr]
                  ) [AstPosExpr]
                ) [AstNotTerExpr]
              ) [AstNewArray]
            ) [AstTermOne]
          ) [AstTermExpr]
        ) [AstPosExpr]
      ) [AstNotTerExpr]
    ) [AstEqualStmt]
  ) [AstDesigStmt]
) [AstStatementL]
ERROR 00:23:42,424 - Name g not declared on line 16
ERROR 00:23:42,424 - Cannot assign. Incompatible types on line 16
INFO  00:23:42,424 - Compilation failed!
