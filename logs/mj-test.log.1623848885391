INFO  15:04:28,092 - Compiling source file: /home/edvin/Desktop/ppp/MicroJavaCompiler/test/program.mj
INFO  15:04:28,115 - #2 program
INFO  15:04:28,115 - #50 SyntaxTest
INFO  15:04:28,115 - #50 int
INFO  15:04:28,116 - #50 bananas
INFO  15:04:28,116 - #50 char
ERROR 15:04:28,116 - 
Sintaksna greska na liniji 2
INFO  15:04:28,116 - #11 ,
INFO  15:04:28,116 - #50 asdf
INFO  15:04:28,116 - #7 ;
INFO  15:04:28,117 - #10 const
INFO  15:04:28,117 - #50 char
INFO  15:04:28,117 - #50 o
ERROR 15:04:28,117 - Syntax error in line 2 global variable error. recovery up to ';'
INFO  15:04:28,118 - #27 =
INFO  15:04:28,119 - #51 o
INFO  15:04:28,119 - #7 ;
INFO  15:04:28,119 - #3 {
INFO  15:04:28,119 - #50 int
INFO  15:04:28,119 - #50 test1
INFO  15:04:28,120 - #8 (
INFO  15:04:28,120 - #50 int
INFO  15:04:28,120 - #50 a
INFO  15:04:28,120 - #11 ,
INFO  15:04:28,120 - #50 int
INFO  15:04:28,120 - #50 b
INFO  15:04:28,120 - #11 ,
INFO  15:04:28,120 - #50 int
INFO  15:04:28,120 - #50 c
INFO  15:04:28,120 - #50 c
ERROR 15:04:28,120 - 
Sintaksna greska na liniji 6
INFO  15:04:28,120 - #9 )
INFO  15:04:28,121 - #3 {
INFO  15:04:28,121 - #13 return
INFO  15:04:28,121 - #49 5
ERROR 15:04:28,121 - Syntax error in line 6 formal params bad. recovery up to ')'
INFO  15:04:28,122 - #7 ;
INFO  15:04:28,122 - #4 }
INFO  15:04:28,122 - #14 void
INFO  15:04:28,123 - #50 test2
INFO  15:04:28,123 - #8 (
INFO  15:04:28,123 - #50 int
INFO  15:04:28,123 - #50 x
INFO  15:04:28,123 - #11 ,
INFO  15:04:28,123 - #50 int
INFO  15:04:28,123 - #50 y
INFO  15:04:28,123 - #50 y
ERROR 15:04:28,123 - 
Sintaksna greska na liniji 10
INFO  15:04:28,124 - #11 ,
INFO  15:04:28,124 - #50 int
INFO  15:04:28,124 - #50 z
INFO  15:04:28,124 - #9 )
INFO  15:04:28,124 - #3 {
ERROR 15:04:28,124 - Syntax error in line 10 formal params bad. recovery up to ','
INFO  15:04:28,124 - #39 if
INFO  15:04:28,125 - #8 (
INFO  15:04:28,125 - #52 true
INFO  15:04:28,125 - #5 [
ERROR 15:04:28,125 - 
Sintaksna greska na liniji 11
INFO  15:04:28,125 - #49 5
INFO  15:04:28,125 - #6 ]
INFO  15:04:28,125 - #9 )
INFO  15:04:28,125 - #3 {
INFO  15:04:28,125 - #4 }
INFO  15:04:28,125 - #40 else
ERROR 15:04:28,125 - Syntax error in line 11 condition in if is bad . recovery up to ')'
INFO  15:04:28,126 - #3 {
INFO  15:04:28,126 - #12 print
INFO  15:04:28,126 - #8 (
INFO  15:04:28,126 - #51 i
INFO  15:04:28,126 - #9 )
INFO  15:04:28,126 - #7 ;
INFO  15:04:28,126 - #12 print
INFO  15:04:28,127 - #8 (
INFO  15:04:28,127 - #51 t
INFO  15:04:28,127 - #9 )
INFO  15:04:28,127 - #7 ;
INFO  15:04:28,127 - #12 print
INFO  15:04:28,127 - #8 (
INFO  15:04:28,127 - #51  
INFO  15:04:28,127 - #9 )
INFO  15:04:28,127 - #7 ;
INFO  15:04:28,127 - #12 print
INFO  15:04:28,127 - #8 (
INFO  15:04:28,127 - #51 w
INFO  15:04:28,127 - #9 )
INFO  15:04:28,127 - #7 ;
INFO  15:04:28,127 - #12 print
INFO  15:04:28,127 - #8 (
INFO  15:04:28,127 - #50 o
INFO  15:04:28,127 - #9 )
INFO  15:04:28,128 - #7 ;
INFO  15:04:28,128 - #12 print
INFO  15:04:28,128 - #8 (
INFO  15:04:28,128 - #51 r
INFO  15:04:28,128 - #9 )
INFO  15:04:28,128 - #7 ;
INFO  15:04:28,128 - #12 print
INFO  15:04:28,128 - #8 (
INFO  15:04:28,128 - #51 k
INFO  15:04:28,128 - #9 )
INFO  15:04:28,128 - #7 ;
INFO  15:04:28,128 - #12 print
INFO  15:04:28,128 - #8 (
INFO  15:04:28,128 - #51 s
INFO  15:04:28,128 - #9 )
INFO  15:04:28,129 - #7 ;
INFO  15:04:28,129 - #4 }
INFO  15:04:28,129 - #4 }
INFO  15:04:28,129 - #14 void
INFO  15:04:28,129 - #50 main
INFO  15:04:28,129 - #8 (
INFO  15:04:28,129 - #9 )
INFO  15:04:28,129 - #3 {
INFO  15:04:28,129 - #50 test2
INFO  15:04:28,130 - #8 (
INFO  15:04:28,130 - #49 2
INFO  15:04:28,130 - #11 ,
INFO  15:04:28,130 - #49 2
INFO  15:04:28,131 - #9 )
INFO  15:04:28,131 - #7 ;
INFO  15:04:28,131 - #4 }
INFO  15:04:28,131 - #4 }
INFO  15:04:28,132 - AstProgram(
  AstProgName(
   SyntaxTest
  ) [AstProgName]
  AstGlobDeclL(
    AstGlobDeclL(
      AstNoGlobDecl(
      ) [AstNoGlobDecl]
      AstGlobVarDecl(
        AstVarDecl(
          AstType(
           int
          ) [AstType]
          AstVarAsgnSemiErr(
          ) [AstVarAsgnSemiErr]
        ) [AstVarDecl]
      ) [AstGlobVarDecl]
    ) [AstGlobDeclL]
    AstGlobCnstDecl(
      AstCnstDecl(
        AstType(
         char
        ) [AstType]
        AstCnstAsgnOne(
          AstCnstAsgnChar(
           o
           o
          ) [AstCnstAsgnChar]
        ) [AstCnstAsgnOne]
      ) [AstCnstDecl]
    ) [AstGlobCnstDecl]
  ) [AstGlobDeclL]
  AstMethDeclL(
    AstMethDeclL(
      AstMethDeclL(
        AstNoMethodDecl(
        ) [AstNoMethodDecl]
        AstMethDecl(
          AstMethTypeName(
            AstType(
             int
            ) [AstType]
           test1
          ) [AstMethTypeName]
          AstFormalParams(
            AstFormalParamL(
              AstFormalParamDeclComma(
                AstFormalParamDecl(
                  AstType(
                   int
                  ) [AstType]
                 a
                ) [AstFormalParamDecl]
              ) [AstFormalParamDeclComma]
              AstFormalParamL(
                AstFormalParamDeclComma(
                  AstFormalParamDecl(
                    AstType(
                     int
                    ) [AstType]
                   b
                  ) [AstFormalParamDecl]
                ) [AstFormalParamDeclComma]
                AstFormalParamErr(
                ) [AstFormalParamErr]
              ) [AstFormalParamL]
            ) [AstFormalParamL]
          ) [AstFormalParams]
          AstNoVarDecl(
          ) [AstNoVarDecl]
          AstStatementL(
            AstNoStmt(
            ) [AstNoStmt]
            AstReturnExpr(
              AstNotTerExpr(
                AstPosExpr(
                  AstTermExpr(
                    AstTermOne(
                      AstFactNum(
                       5
                      ) [AstFactNum]
                    ) [AstTermOne]
                  ) [AstTermExpr]
                ) [AstPosExpr]
              ) [AstNotTerExpr]
            ) [AstReturnExpr]
          ) [AstStatementL]
        ) [AstMethDecl]
      ) [AstMethDeclL]
      AstMethDecl(
        AstMethVoidName(
         test2
        ) [AstMethVoidName]
        AstFormalParams(
          AstFormalParamL(
            AstFormalParamDeclComma(
              AstFormalParamDecl(
                AstType(
                 int
                ) [AstType]
               x
              ) [AstFormalParamDecl]
            ) [AstFormalParamDeclComma]
            AstFormalParamL(
              AstFormalParamListErr(
              ) [AstFormalParamListErr]
              AstFormalParamOne(
                AstFormalParamDecl(
                  AstType(
                   int
                  ) [AstType]
                 z
                ) [AstFormalParamDecl]
              ) [AstFormalParamOne]
            ) [AstFormalParamL]
          ) [AstFormalParamL]
        ) [AstFormalParams]
        AstNoVarDecl(
        ) [AstNoVarDecl]
        AstStatementL(
          AstNoStmt(
          ) [AstNoStmt]
          AstMatchedIf(
            AstIfPartErr(
            ) [AstIfPartErr]
            AstStmtL(
              AstNoStmt(
              ) [AstNoStmt]
            ) [AstStmtL]
            AstElsePart(
            ) [AstElsePart]
            AstStmtL(
              AstStatementL(
                AstStatementL(
                  AstStatementL(
                    AstStatementL(
                      AstStatementL(
                        AstStatementL(
                          AstStatementL(
                            AstStatementL(
                              AstNoStmt(
                              ) [AstNoStmt]
                              AstPrintStmt(
                                AstNotTerExpr(
                                  AstPosExpr(
                                    AstTermExpr(
                                      AstTermOne(
                                        AstFactChar(
                                         i
                                        ) [AstFactChar]
                                      ) [AstTermOne]
                                    ) [AstTermExpr]
                                  ) [AstPosExpr]
                                ) [AstNotTerExpr]
                              ) [AstPrintStmt]
                            ) [AstStatementL]
                            AstPrintStmt(
                              AstNotTerExpr(
                                AstPosExpr(
                                  AstTermExpr(
                                    AstTermOne(
                                      AstFactChar(
                                       t
                                      ) [AstFactChar]
                                    ) [AstTermOne]
                                  ) [AstTermExpr]
                                ) [AstPosExpr]
                              ) [AstNotTerExpr]
                            ) [AstPrintStmt]
                          ) [AstStatementL]
                          AstPrintStmt(
                            AstNotTerExpr(
                              AstPosExpr(
                                AstTermExpr(
                                  AstTermOne(
                                    AstFactChar(
                                      
                                    ) [AstFactChar]
                                  ) [AstTermOne]
                                ) [AstTermExpr]
                              ) [AstPosExpr]
                            ) [AstNotTerExpr]
                          ) [AstPrintStmt]
                        ) [AstStatementL]
                        AstPrintStmt(
                          AstNotTerExpr(
                            AstPosExpr(
                              AstTermExpr(
                                AstTermOne(
                                  AstFactChar(
                                   w
                                  ) [AstFactChar]
                                ) [AstTermOne]
                              ) [AstTermExpr]
                            ) [AstPosExpr]
                          ) [AstNotTerExpr]
                        ) [AstPrintStmt]
                      ) [AstStatementL]
                      AstPrintStmt(
                        AstNotTerExpr(
                          AstPosExpr(
                            AstTermExpr(
                              AstTermOne(
                                AstDesigFact(
                                  AstDesig(
                                   o
                                  ) [AstDesig]
                                ) [AstDesigFact]
                              ) [AstTermOne]
                            ) [AstTermExpr]
                          ) [AstPosExpr]
                        ) [AstNotTerExpr]
                      ) [AstPrintStmt]
                    ) [AstStatementL]
                    AstPrintStmt(
                      AstNotTerExpr(
                        AstPosExpr(
                          AstTermExpr(
                            AstTermOne(
                              AstFactChar(
                               r
                              ) [AstFactChar]
                            ) [AstTermOne]
                          ) [AstTermExpr]
                        ) [AstPosExpr]
                      ) [AstNotTerExpr]
                    ) [AstPrintStmt]
                  ) [AstStatementL]
                  AstPrintStmt(
                    AstNotTerExpr(
                      AstPosExpr(
                        AstTermExpr(
                          AstTermOne(
                            AstFactChar(
                             k
                            ) [AstFactChar]
                          ) [AstTermOne]
                        ) [AstTermExpr]
                      ) [AstPosExpr]
                    ) [AstNotTerExpr]
                  ) [AstPrintStmt]
                ) [AstStatementL]
                AstPrintStmt(
                  AstNotTerExpr(
                    AstPosExpr(
                      AstTermExpr(
                        AstTermOne(
                          AstFactChar(
                           s
                          ) [AstFactChar]
                        ) [AstTermOne]
                      ) [AstTermExpr]
                    ) [AstPosExpr]
                  ) [AstNotTerExpr]
                ) [AstPrintStmt]
              ) [AstStatementL]
            ) [AstStmtL]
          ) [AstMatchedIf]
        ) [AstStatementL]
      ) [AstMethDecl]
    ) [AstMethDeclL]
    AstMethDecl(
      AstMethVoidName(
       main
      ) [AstMethVoidName]
      AstNoFormalParams(
      ) [AstNoFormalParams]
      AstNoVarDecl(
      ) [AstNoVarDecl]
      AstStatementL(
        AstNoStmt(
        ) [AstNoStmt]
        AstDesigStmt(
          AstFuncCallStmt(
            AstFuncDesig(
              AstDesig(
               test2
              ) [AstDesig]
            ) [AstFuncDesig]
            AstActualParams(
              AstStartActualParams(
              ) [AstStartActualParams]
              AstActualParamL(
                AstActualParam(
                  AstOneActualParam(
                    AstNotTerExpr(
                      AstPosExpr(
                        AstTermExpr(
                          AstTermOne(
                            AstFactNum(
                             2
                            ) [AstFactNum]
                          ) [AstTermOne]
                        ) [AstTermExpr]
                      ) [AstPosExpr]
                    ) [AstNotTerExpr]
                  ) [AstOneActualParam]
                ) [AstActualParam]
                AstOneActualParam(
                  AstNotTerExpr(
                    AstPosExpr(
                      AstTermExpr(
                        AstTermOne(
                          AstFactNum(
                           2
                          ) [AstFactNum]
                        ) [AstTermOne]
                      ) [AstTermExpr]
                    ) [AstPosExpr]
                  ) [AstNotTerExpr]
                ) [AstOneActualParam]
              ) [AstActualParamL]
            ) [AstActualParams]
          ) [AstFuncCallStmt]
        ) [AstDesigStmt]
      ) [AstStatementL]
    ) [AstMethDecl]
  ) [AstMethDeclL]
) [AstProgram]
INFO  15:04:28,138 - Constant declared o on line 3
INFO  15:04:28,138 - Function test1 is being defined on line 6
INFO  15:04:28,138 - Variable declared a on line 6
INFO  15:04:28,138 - Variable declared b on line 6
INFO  15:04:28,138 - Function test2is being defined on line 10
INFO  15:04:28,138 - Variable declared x on line 10
INFO  15:04:28,138 - Variable declared z on line 10
INFO  15:04:28,138 - Function mainis being defined on line 28
INFO  15:04:28,141 - Compilation successful!
